
@{
    ViewBag.Title = "Games";
}

<nav class="teal">
    <div class="container">
        <div class="nav-wrapper">
            <ul class="left">
                <li><a href='@Url.Action("Standings", "IPL18")'>Standings</a></li>
                <li class="active"><a href='@Url.Action("Games", "IPL18")'>Upcoming Games</a></li>
                <li><a href='@Url.Action("Teams", "IPL18")'>Teams</a></li>
            </ul>
        </div>
    </div>
</nav>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- CricPredict -->
<ins class="adsbygoogle"
     style="display:inline-block;width:728px;height:90px"
     data-ad-client="ca-pub-2176788893488829"
     data-ad-slot="9093449408"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>

@{
    string inputUpcomingGames = (string)ViewData["UpcomingGames"];
    List<string> upcomingGames = new List<string>();
    string[] tokens = inputUpcomingGames.Split(',');
    foreach (string token in tokens)
    {
        upcomingGames.Add(token);
    }

    string inputWinners = (string)ViewData["Winners"];
    List<string> winners = new List<string>();
    tokens = inputWinners.Split(',');
    foreach (string token in tokens)
    {
        winners.Add(token);
    }

    string inputStandings = (string)ViewData["Standings"];
    List<string> standings = new List<string>();
    tokens = inputStandings.Split(',');
    foreach (string token in tokens)
    {
        standings.Add(token);
    }
}

<div class="container">
    <h5 style="padding-left:10px">Projected Standings</h5>
    <div id="projectedStandings">
    </div>
    <h5 style="padding-left:10px">Upcoming Games</h5>
    <div id="upcomingGameCards">
    </div>
</div>

<script type="text/javascript">
    @{ string gamesAsString = string.Join(",", upcomingGames.ToArray());}
    var gamesJSTemp = '@gamesAsString';
    var gamesJS = gamesJSTemp.split(",");
    //for (i = 0; i < gamesJS.length; i++)
    //    alert(gamesJS[i]);
    
    @{ string winnerAsString = string.Join(",", winners.ToArray());}
    var winnersJSTemp = '@winnerAsString';
    var winnersJS = winnersJSTemp.split(",");
    //for (i = 0; i < winnersJS.length; i++)
    //    alert(winnersJS[i]);

    @{ string standingsAsString = string.Join(",", standings.ToArray());}
    var standingsJSTemp = '@standingsAsString';
    var standingsJSTokens = standingsJSTemp.split(",");

    var origStandingsJS = [];
    var standingsJS = [];
    for (i = 0; i < standingsJSTokens.length; i=i+8)
    {
        standingsJS.push({ "TeamName": standingsJSTokens[i], "W": standingsJSTokens[i + 2], "L": standingsJSTokens[i + 3], "T": standingsJSTokens[i + 4], "Pts": standingsJSTokens[i + 5], "NRR": standingsJSTokens[i + 6], "PlayoffPercentage": standingsJSTokens[i + 7] });
        origStandingsJS.push({ "TeamName": standingsJSTokens[i], "W": standingsJSTokens[i + 2], "L": standingsJSTokens[i + 3], "T": standingsJSTokens[i + 4], "Pts": standingsJSTokens[i + 5], "NRR": standingsJSTokens[i + 6], "PlayoffPercentage": standingsJSTokens[i + 7] });
    }
    
    for (i = 0; i < winnersJS.length; i++)
    {
        var winner = winnersJS[i];
        var team1 = gamesJS[i * 4 + 1];
        var team2 = gamesJS[i * 4 + 2];
        //alert(team1 + ", " + team2 + ", " + winner);

        //for (i = 0; i < standingsJS.length; i++)
        //    alert(standingsJS[i].TeamName);

        var currItem = findObjectByKey(standingsJS, "TeamName", winnersJS[i]);
        currItem.W = currItem.W * 1 + 1;
        currItem.Pts = currItem.Pts * 1 + 2;

        if (winner == team1)
        {
            var otherTeam = findObjectByKey(standingsJS, "TeamName", team2);
            otherTeam.L = otherTeam.L * 1 + 1;
        }
        else if (winner == team2)
        {
            var otherTeam = findObjectByKey(standingsJS, "TeamName", team1);
            otherTeam.L = otherTeam.L * 1 + 1;
        }
        else {
            alert("Error. Could not determine the winner. team1 = " + team1 + ", team2 = " + team2 + ", winner = "+ winner);
        }
    }

    function GetCorrespondingId(inputId)
    {
        var res = inputId.split(',');
        if (res[3] == "1") {
            var toBeReturned = res[0] + "," + res[1] + "," + res[2] + "," + "2";
            return toBeReturned;
        }
        else {
            var toBeReturned = res[0] + "," + res[1] + "," + res[2] + "," + "1";
            return toBeReturned;
        }
    }

    function findObjectByKey(array, key, value)
    {
        for (var i = 0; i < array.length; i++) {
            //alert(array[i].TeamName);
            if (array[i][key].localeCompare(value) == 0) {
                //alert("found!");
                return array[i];
            }
            //alert("comparing " + array[i][key] +" to "+ value);
            //if (array[i][key] == value) {
            //    return array[i];
            //}
        }
        alert("Error: " + value + " not found!");
        return null;
    }

    function GetSortedStandings()
    {
        //Get updated winnersJS:
        standingsJS.sort(function (a, b) {
            if (a.pts != b.pts)
                return b.pts - a.pts;
            else if (a.W != b.W)
                return b.W - a.W;
            else if (a.NRR != b.NRR)
                return b.NRR - a.NRR;
            else {
                if (a.TeamName == b.TeamName) return 0;
                if (a.TeamName > b.TeamName) return 1;
                if (a.TeamName < b.TeamName) return -1;
            }
        });

        document.getElementById('projectedStandings').innerHTML = GetProjectedStandingsContent();        
    }

    function ChangeSelection(id)
    {
        //3 things need to happen:
        //1. Update check boxes (done)
        //2. Update standings
        //3. Update Projected standings based on new winners

        //1. Update check boxes:
        var corrId = GetCorrespondingId(id);
        document.getElementById(corrId).checked = !document.getElementById(id).checked;

        var winner = "";
        var loser = "";
        if (document.getElementById(id).checked == true) {


            ////2. update WinnersJS Array and standings:
            ////alert(id); //id is in the format: game,x,team,y
            var tokens = id.split(',');
            var index = tokens[1] * 4 + tokens[3] * 1;

            var otherTokens = corrId.split(',');
            var otherIndex = otherTokens[1] * 4 + otherTokens[3] * 1;

            //alert("winner = " + gamesJS[index] + " loser = " + gamesJS[otherIndex]);
            winner = gamesJS[index];
            loser = gamesJS[otherIndex];
        }
        else {
            var tokens = id.split(',');
            var index = tokens[1] * 4 + tokens[3] * 1;

            var otherTokens = corrId.split(',');
            var otherIndex = otherTokens[1] * 4 + otherTokens[3] * 1;

            //alert("winner = " + gamesJS[otherIndex] + " loser = " + gamesJS[index]);
            winner = gamesJS[otherIndex];
            loser = gamesJS[index];

            //alert('old winner = ' + gamesJS[index] + 'new winner = ' + winnersJS[tokens[1] * 1]);
        }

        //Loser:
        var currItem = findObjectByKey(standingsJS, "TeamName", loser);
        currItem.W = currItem.W * 1 - 1;
        currItem.Pts = currItem.Pts * 1 - 2;

        //Winner:
        var currItem = findObjectByKey(standingsJS, "TeamName", winner);
        currItem.W = currItem.W * 1 + 1;
        currItem.Pts = currItem.Pts * 1 + 2;

        //3. Projected standings need to be updated.
        GetSortedStandings();
    }

    function GetProjectedStandingsContent()
    {
        var content = "";
        content += "<div class=\"row\">";

        for (i = 0; i < 2; i++)
        {
            content += "<div class=\"col s12 m6\">";
            content += "<div class=\"row\">";
            for (j = 0; j < 4; j++)
            {
                content += "<div class=\"col s3 z-depth-2 center \">";

                var teamNameWithoutQuotes = standingsJS[i * 4 + j * 1].TeamName.substring(6, standingsJS[i * 4 + j * 1].TeamName.length - 6);
                //alert(teamNameWithoutQuotes);
                if (i == 0)
                    content += "<div style=\"padding-top:10px\"><i class=\"center tiny material-icons\" style=\"color:#ffab00 \">star</i></div>";
                else
                    content += "<div style=\"padding-top:10px\"><i class=\"center tiny material-icons\" style=\"color:#9e9e9e \">star_border</i></div>";
                content += "<div><img src=\"/Content/IPL/Logos/" + teamNameWithoutQuotes + ".png\" style=\"max-width:100%\"> </div>";
                content += "<div style=\"font-size:12px\">" + standingsJS[i * 4 + j * 1].W + "-" + standingsJS[i * 4 + j * 1].L + "-" + standingsJS[i * 4 + j * 1].T + "</div>";
                content += "<div style=\"font-size:10px; padding-bottom:10px\">(" + origStandingsJS[i * 4 + j * 1].W + "-" + origStandingsJS[i * 4 + j * 1].L + "-" + origStandingsJS[i * 4 + j * 1].T + ")</div>";
                content += "</div>";
            }
            content += "</div>";
            content += "</div>";
        }
        content += "</div>";
        return content;
    }

    window.onload = function () {
        
        GetSortedStandings();

        document.getElementById('projectedStandings').innerHTML = GetProjectedStandingsContent();

        //Reset the check boxes to as original.
        var content = "<div class=\"row\">";

        for (i = 0; i < gamesJS.length/4; i++)
        {
            content += "<div class=\"col s12 m6 l4\">"
            content += "<div class=\"card teal lighten-5 z-depth-2\" >";
            content += "<div class=\"card-content black-text\" >";
            if (winnersJS[i] == gamesJS[i * 4 + 1]) {
                content += "<label> <input type = \"checkbox\" id= \"game," + i + ",team,1\" onclick=\"ChangeSelection(id)\" checked=\"checked\" \>";
            }
            else {
                content += "<label> <input type = \"checkbox\" id= \"game," + i + ",team,1\" onclick=\"ChangeSelection(id)\" \>";
            }

            var teamNameWithoutQuotes = gamesJS[i * 4 + 1].substring(6, gamesJS[i * 4 + 1].length - 6);
            content += "<span class=\"black-text\">" + teamNameWithoutQuotes  + " </span> </label> <br />";

            if (winnersJS[i] == gamesJS[i * 4 + 2]) {
                content += "<label> <input type = \"checkbox\" id= \"game," + i + ",team,2\" onclick=\"ChangeSelection(id)\" checked=\"checked\" \>";
            }
            else {
                content += "<label> <input type = \"checkbox\" id= \"game," + i + ",team,2\" onclick=\"ChangeSelection(id)\" \>";
            }
            teamNameWithoutQuotes = gamesJS[i * 4 + 2].substring(6, gamesJS[i * 4 + 2].length - 6);
            content += "<span class=\"black-text\">" + teamNameWithoutQuotes + "</span> </label> <br />";
            var when = gamesJS[i * 4].substring(6, gamesJS[i * 4].length - 6);
            content += "<span class=\"left\" style=\"font-size:9px; padding-top:5px\">" + when + "</span>";
            var where = gamesJS[i * 4 + 3].substring(6, gamesJS[i * 4 + 3].length - 6);
            content += "<span class=\"right\" style=\"font-size:9px; padding-top:5px; padding-right:25px\">" + where + "</span> <br />";

            content += "</div>";
            content += "</div>";
            content += "</div>";
        }
        content += "</div>";
        document.getElementById('upcomingGameCards').innerHTML = content;
    }

</script>
